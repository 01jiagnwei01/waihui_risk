import org.gradle.plugins.ide.eclipse.model.Facet
apply plugin: 'java'
apply plugin: 'war'
apply plugin: 'eclipse-wtp'
apply plugin: 'groovy'
version = '1.0'
sourceCompatibility = 1.8
//webAppDirName = 'WebContent'    // 设置 WebApp 根目录
[compileJava, compileTestJava,compileGroovy,javadoc]*.options*.encoding = 'UTF-8'
//tasks.withType(JavaCompile) { options.encoding = "UTF-8" }
sourceSets {
	main {
		groovy {
			srcDirs = [
				'src/main/groovy',
				'src/main/java'
			]
		}  // compile everything in src/ with groovy
		java { srcDirs = []}    // no source dirs for the java compiler
  
	}
}
tasks.withType(GroovyCompile) {
	groovyOptions.encoding = "UTF-8"
}

repositories {
	mavenLocal()
	 mavenCentral() // 中央库
}
jar {
    manifest {
        attributes 'Implementation-Title': 'Gradle Quickstart', 'Implementation-Version': version
    }
}

repositories {
    mavenCentral()
}

dependencies {
    
	
	compile 'org.springframework:spring-webmvc:4.1.2.RELEASE'
	compile 'org.springframework:spring-tx:4.1.2.RELEASE'
	compile 'org.springframework:spring-aop:4.1.2.RELEASE'
	compile 'org.springframework:spring-jdbc:4.1.2.RELEASE'
	compile 'org.springframework.batch:spring-batch-core:3.0.2.RELEASE'
	compile 'org.springframework:spring-orm:4.1.2.RELEASE'
	
	
	compile 'org.hibernate:hibernate-core:4.3.7.Final'
	compile 'org.hibernate:hibernate-validator:5.1.3.Final'
	
	compile 'javax.servlet:jstl:1.2'
	compile 'aopalliance:aopalliance:1.0';
	
	compile group: 'commons-collections', name: 'commons-collections', version: '3.2'
	compile 'commons-dbcp:commons-dbcp:1.4'
	compile 'org.apache.commons:commons-lang3:3.3.2'
	compile 'commons-fileupload:commons-fileupload:1.3.1'
	compile 'commons-io:commons-io:2.4';
	compile 'commons-codec:commons-codec:1.10';
	compile 'commons-logging:commons-logging:1.2';
	compile 'commons-beanutils:commons-beanutils:1.9.2'
	//aspect
	compile 'aspectj:aspectjweaver:1.5.4'
	
	compile "org.apache.httpcomponents:httpclient:4.2.2"
	compile 'org.apache.httpcomponents:httpcore:4.4';
	
	//jackson
	compile 'org.codehaus.jackson:jackson-mapper-lgpl:1.9.13'
	compile 'org.codehaus.jackson:jackson-core-asl:1.9.13'
	compile 'com.fasterxml.jackson.core:jackson-databind:2.4.3'
	compile 'com.fasterxml.jackson.core:jackson-core:2.4.3'
	compile 'com.alibaba:fastjson:1.2.5'
	
	//log
	compile 'ch.qos.logback:logback-classic:1.1.3'
	compile 'ch.qos.logback:logback-core:1.1.3'
	compile 'ch.qos.logback:logback-access:1.1.3'
	
	compile 'org.slf4j:jul-to-slf4j:1.7.12'
	compile 'org.slf4j:jcl-over-slf4j:1.7.12'
	compile 'org.slf4j:slf4j-api:1.7.12'
	
	//避免警告：sun.misc.BASE64Decoder 是 Sun 的专用
	compile 'org.apache.maven.plugins:maven-compiler-plugin:3.2'
	
    testCompile group: 'junit', name: 'junit', version: '4.+'
	testCompile 'org.springframework:spring-test:4.1.2.RELEASE'
}

test {
    systemProperties 'property': 'value'
}

uploadArchives {
    repositories {
       flatDir {
           dirs 'repos'
       }
    }
}
eclipse.classpath.defaultOutputDir=file("${project.projectDir}/WebContent/WEB-INF/classes");
eclipse {
	project {
		//增加tomcat插件,groovyNature属性
		natures += ['org.eclipse.wst.jsdt.core.jsNature' ,'com.sysdeo.eclipse.tomcat.tomcatnature']
		//natures += ['org.eclipse.jdt.groovy.core.groovyNature']
		buildCommand 'org.eclipse.wst.jsdt.core.javascriptValidator'
		buildCommand 'org.eclipse.jdt.core.javabuilder'
		buildCommand 'org.eclipse.wst.common.project.facet.core.builder'
		buildCommand 'org.eclipse.wst.validation.validationbuilder'
	}
	wtp {
		component {
			//resource sourcePath: 'extra/resource', deployPath: 'deployment/resource'
			//property name: 'java-output-path', value: "/${project.name}/src/main/webapp/WEB-INF/classes"
			
		}
		facet {
			facet name: 'wst.jsdt.web', type: Facet.FacetType.fixed
			facet name: 'jst.web', type: Facet.FacetType.fixed
			facet name: 'java', type: Facet.FacetType.fixed
			facet name: 'java', version: '1.8'
			facet name: 'jst.web', version: '3.0'
			facet name: 'wst.jsdt.web', version: '1.0'
		}
		 
	}
	jdt {
		sourceCompatibility = 1.8
		targetCompatibility = 1.8
   
	}
}
eclipse.classpath.file.withXml {
	def node = it.asNode();
	//println "node.children().size1="+node.children().size();
	node.children().removeAll() { c ->
		//println  c.attribute("kind")+"  "+c.attribute("path");
		
		//return true;
		
	}
	println "node.children().size2="+node.children().size();
	//增加
	//<classpathentry exported="true" kind="con" path="GROOVY_SUPPORT"/>
	//<classpathentry exported="true" kind="con" path="GROOVY_DSL_SUPPORT"/>
	def groovy_map = ['exported':'true','kind':'con','path':'GROOVY_SUPPORT'];
	def GROOVY_SUPPORT_NODE = new Node(node, "classpathentry",groovy_map);
	
	def groovy_dsl_map = ['exported':'true','kind':'con','path':'GROOVY_DSL_SUPPORT'];
	def GROOVY_DSL_SUPPORT_node = new Node(node, "classpathentry",groovy_dsl_map);
	
}
